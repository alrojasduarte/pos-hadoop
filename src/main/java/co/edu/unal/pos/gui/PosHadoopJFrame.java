/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.unal.pos.gui;

import java.util.Map;
import java.util.TreeMap;

import javax.swing.SwingWorker;

import co.edu.unal.pos.common.properties.PropertiesProvider;
import co.edu.unal.pos.hadoop.HadoopSwingWorker;

/**
 *
 * @author Andres
 */
public class PosHadoopJFrame extends javax.swing.JFrame {

	private static final String[] COLUMN_NAMES = {"Property", "Value"};
	
	javax.swing.table.DefaultTableModel propertiesTableDataModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            COLUMN_NAMES);
	
	private Map<String,String> properties = new TreeMap<String, String>();
	
	/**
     * Creates new form PosHadoopJFrame
     */
    public PosHadoopJFrame() {
        initComponents();
        this.setTitle("POS Hadoop");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        etlJPanel = new javax.swing.JPanel();
        etlStatusJPanel = new javax.swing.JPanel();
        etlJProgressBar = new javax.swing.JProgressBar();
        startEtlJPanel = new javax.swing.JPanel();
        startEtlJButton = new javax.swing.JButton();
        mapReduceJPanel = new javax.swing.JPanel();
        configurationJPanel = new javax.swing.JPanel();
        configurationJScrollPane = new javax.swing.JScrollPane();
        propertiesJTable = new javax.swing.JTable();
        saveConfigurationJPanel = new javax.swing.JPanel();
        saveConfigurationJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        etlStatusJPanel.setLayout(new java.awt.BorderLayout());
        etlStatusJPanel.add(etlJProgressBar, java.awt.BorderLayout.CENTER);

        startEtlJButton.setLabel("Start");
        startEtlJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startEtlJButtonActionPerformed(evt);
            }
        });
        startEtlJPanel.add(startEtlJButton);

        javax.swing.GroupLayout etlJPanelLayout = new javax.swing.GroupLayout(etlJPanel);
        etlJPanel.setLayout(etlJPanelLayout);
        etlJPanelLayout.setHorizontalGroup(
            etlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(etlJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(etlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etlStatusJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addComponent(startEtlJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        etlJPanelLayout.setVerticalGroup(
            etlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(etlJPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(etlStatusJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(startEtlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("ETL", etlJPanel);

        javax.swing.GroupLayout mapReduceJPanelLayout = new javax.swing.GroupLayout(mapReduceJPanel);
        mapReduceJPanel.setLayout(mapReduceJPanelLayout);
        mapReduceJPanelLayout.setHorizontalGroup(
            mapReduceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        mapReduceJPanelLayout.setVerticalGroup(
            mapReduceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        jTabbedPane.addTab("Map Reduce", mapReduceJPanel);

        configurationJPanel.setLayout(new java.awt.BorderLayout());

        propertiesJTable.setModel(propertiesTableDataModel);
        
        
        configurationJScrollPane.setViewportView(propertiesJTable);

        configurationJPanel.add(configurationJScrollPane, java.awt.BorderLayout.CENTER);

        saveConfigurationJButton.setText("Save");
        saveConfigurationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveConfigurationJButtonActionPerformed(evt);
            }
        });
        saveConfigurationJPanel.add(saveConfigurationJButton);

        configurationJPanel.add(saveConfigurationJPanel, java.awt.BorderLayout.PAGE_END);

        jTabbedPane.addTab("Configuration", configurationJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void startEtlJButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	SwingWorker<Void,Void> swingWorker = new HadoopSwingWorker(this);
    	swingWorker.execute();
    }                                               

    private void saveConfigurationJButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	SwingWorker<Void, Void> swingWorker = new SwingWorker<Void, Void>(){

			@Override
			protected Void doInBackground() throws Exception {
			       disableGUI();
			       properties.clear();
			       for(int i = 0;i<propertiesTableDataModel.getRowCount();i++){
			    	   properties.put(propertiesTableDataModel.getValueAt(i, 0).toString(),propertiesTableDataModel.getValueAt(i, 1).toString());
			       }
			       PropertiesProvider.getInstance().saveProperties(properties);
			       enableGUI();
				return null;
			}
    		
    	};
    	swingWorker.execute();
    }                                                        


    // Variables declaration - do not modify                     
    private javax.swing.JPanel configurationJPanel;
    private javax.swing.JScrollPane configurationJScrollPane;
    private javax.swing.JPanel etlJPanel;
    private javax.swing.JProgressBar etlJProgressBar;
    private javax.swing.JPanel etlStatusJPanel;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable propertiesJTable;
    private javax.swing.JPanel mapReduceJPanel;
    private javax.swing.JButton saveConfigurationJButton;
    private javax.swing.JPanel saveConfigurationJPanel;
    private javax.swing.JButton startEtlJButton;
    private javax.swing.JPanel startEtlJPanel;
    // End of variables declaration
	public javax.swing.JProgressBar getEtlJProgressBar() {
		return etlJProgressBar;
	}

	public void enableGUI() {
		this.jTabbedPane.setEnabled(true);
		this.startEtlJButton.setEnabled(true);
		this.saveConfigurationJButton.setEnabled(true);
		propertiesJTable.setEnabled(true);
		
	}
	
	public void disableGUI() {
		this.jTabbedPane.setEnabled(false);
		this.startEtlJButton.setEnabled(false);
		this.saveConfigurationJButton.setEnabled(false);
		propertiesJTable.setEnabled(false);
	}
    
    public void setPropertiesTableDataModel(String[][] propertiesTableDataModel){
    	this.propertiesTableDataModel.setDataVector(propertiesTableDataModel, COLUMN_NAMES);
    	
    }

	public void updatePropertiesTableDataModel() {
		SwingWorker<Void, Void> swingWorker = new SwingWorker<Void, Void>(){

			@Override
			protected Void doInBackground() throws Exception {
				disableGUI();
				etlJProgressBar.setStringPainted(true);
				etlJProgressBar.setIndeterminate(true);
				etlJProgressBar.setString("Loading application...");
	              Map<String,String> properties = PropertiesProvider.getInstance().getProperties();              
	              String [][] propertiesTableDataModel = new String[properties.size()][2];
	              int i = 0;
	              for(Map.Entry<String, String> property:properties.entrySet()){
	            	  propertiesTableDataModel[i][0] = property.getKey();
	            	  propertiesTableDataModel[i][1] = property.getValue();
	            	  i++;
	              }
	              setPropertiesTableDataModel(propertiesTableDataModel);
	              etlJProgressBar.setString("");
	              etlJProgressBar.setIndeterminate(false);
	              enableGUI();
				return null;
			}
			
		};
		swingWorker.execute();
	}
}
